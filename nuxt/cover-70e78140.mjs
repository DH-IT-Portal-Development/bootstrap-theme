import{a as f,r as c,b as h,o as d,e as u,f as s,w as o,u as n,h as e,t as i,F as y,s as b,j as t,E as w,k as x,v as r}from"./entry-0ccd6c11.mjs";import{_ as C}from"./sidebar-ab5239ce.mjs";import{U as k}from"./uu-layout-nav-79b233eb.mjs";const U={class:"uu-content"},T=t(" Cover | UU Layout | Portaldev Bootstrap theme docs "),B=e("div",{class:"uu-cover h-100 align-items-center"},[e("img",{class:"uu-cover-image",alt:"cover",src:w}),e("div",{class:"uu-cover-copyright uu-cover-copyright-right uu-cover-copyright-top"}," Cover by Simona Evsatieva "),e("div",{class:"uu-cover-hero uu-cover-hero-left"},[e("h1",null,"UU Layout Cover")])],-1),H=t(" Sidebar "),$=e("h2",{class:"mt-3"}," Variables ",-1),E=e("pre",null,`$uu-cover-default-height:             400px;
$uu-cover-copyright-padding-x:        10px;
$uu-cover-copyright-padding-y:        10px;
$uu-cover-copyright-text-size:        0.8rem;
$uu-cover-copyright-text-color:       $gray-300;
$uu-cover-copyright-background-color: rgba(0,0,0, 0.5);
                    `,-1),S=e("p",null," The cover is an image at the start of the page, below the header and navbar, often seen on UU site homepages and sometimes seen on other UU site pages as well. They server to provide (contextual) imagery/eye candy for the site/app to make it feel more appealing to humans. ",-1),F=e("p",null," This component provides an easy to add, responsive, implementation of the cover: ",-1),L=e("h2",{class:"mt-4"}," Responsiveness, sizing and positioning ",-1),z=e("p",null," For optimal results, use an image that is 1600px wide and 400px tall. Bigger images are possible, but it is not recommended to go smaller. Bigger images might be cropped to fit. ",-1),I=t(" The component will try prioritise showing the full height of the image up until breakpoint "),N=e("code",null,"md",-1),P=t(", after which it will prioritise showing the full "),V=e("i",null,"width",-1),A=t(" of the image. Parts of the image that do not fit will be cropped (see "),j=t(" Controlling cropping "),D=t("). "),q=e("h3",null,"Vertical height",-1),J=t(" By default, the cover is limited to a maximum height of 400 pixels. Any images larger than that will be cropped in height to fit. (Even in breakpoints lower than "),M=e("code",null,"md",-1),R=t("). See "),W=t(" Controlling cropping "),G=t(". "),K=e("p",null," This can be overriden either globally by changing the default height variable, or on a specific cover by using one of 4 height classes. These height classes also have breakpoint specific versions. ",-1),O=t(" or "),Q=e("div",{class:"alert alert-warning"},[t(" Unlike most breakpoint specific classes, these modifiers work "),e("i",null,"down"),t(". So "),e("code",null,".h-md-200"),t(" sets the height to a maximum to 200px from "),e("code",null,"xs"),t(" up to and including "),e("code",null,"md"),t(" instead of from "),e("code",null,"md"),t(" and wider. ")],-1),X=e("div",{class:"alert alert-info"},[t(" In most cases it's advised to limit the 'mobile' version's height to 200px using the "),e("code",{class:"text-nowrap"},".h-md-200"),t(" class. Feel free to experiment with what looks right tho. ")],-1),Y=e("h3",{id:"cropping",class:"mt-4"}," Controlling cropping ",-1),Z=e("p",null," As stated above, there are many situation where an image will be cropped. By default both sides of the to-be-cropped axis will be cropped. (In other words, the center of the image is prioritized). ",-1),ee=e("p",null,[t(" As this is done by using flexbox, this can be controlled by using Bootstrap's "),e("code",{class:"text-nowrap"},".justify-content-{}"),t(" (horizontal positioning) and "),e("code",{class:"text-nowrap"},".align-items-{}"),t(" (vertical positioning) classes. ")],-1),te=e("p",null,[t(" For example, adding "),e("code",{class:"text-nowrap"},".align-items-start"),t(" will prioritize the top of the image, ensuring only the bottom of the image will be cropped. ")],-1),oe=e("h2",null,"Copyright",-1),se=e("p",null,[t(" Many images in the UU Image Library require attribution to the photographer/maker. For this purpose you can use "),e("code",{class:"text-nowrap"},".uu-cover-copyright"),t(": ")],-1),ie=e("h3",{class:"mt-3"}," Placement ",-1),ne=e("p",null,[t(" By default, the attribution will be placed in the bottom left corner. This can be changed by adding the "),e("code",{class:"text-nowrap"},".uu-cover-copyright-top"),t(" and "),e("code",{class:"text-nowrap"},".uu-cover-copyright-right"),t(" classes respectively. ")],-1),ae=e("h2",null,"Cover Hero",-1),le=t(" When your page uses a "),re=t(" Sidebar "),ce=t(" for it's main content, you can opt to use a Cover Hero instead of a regular fullwidth "),he=t(" Hero "),de=t(". This will limit the width of the hero to the content portion of the Sidebar component for a nice visual effect: "),ue=e("p",null,[t(" By default the hero will be placed on the right side of the page, as the default placement of the sidebar is on the left. If you use the sidebar on the right, add the "),e("code",{class:"text-nowrap"},"uu-cover-hero-left"),t(" class to the Cover Hero. ")],-1),pe=e("div",{class:"alert alert-warning"},[t(" If you want a fullwidth Hero instead, use a regular Hero "),e("i",null,"outside"),t(" of the cover element. The Cover component does not handle the regular Hero well. ")],-1),be=f({__name:"cover",setup(ge){const p=c(`<div class="uu-cover">
    <img class="uu-cover-image" alt="cover" src="img/cover.png" />
</div>`),g=c(`<div class="uu-cover">
    <img class="uu-cover-image" alt="cover" src="img/cover.png" />
    <div class="uu-cover-copyright">
        Cover by John Doe
    </div>
</div>`),_=c(`<div class="uu-cover">
    <img class="uu-cover-image" alt="cover" src="img/cover.png" />
    <div class="uu-cover-hero">
        <h1>Page title</h1>
    </div>
</div>`);return(_e,me)=>{const m=h("Title"),v=h("Head"),a=x;return d(),u("div",U,[s(v,null,{default:o(()=>[s(m,null,{default:o(()=>[T]),_:1})]),_:1}),B,s(n(C),{placement:"right"},{"sidebar-button":o(()=>[H]),sidebar:o(()=>[s(k),$,s(n(r),{language:"scss",class:"w-100"},{default:o(()=>[E]),_:1})]),default:o(()=>[S,F,s(n(r),{lang:"html",class:"w-100"},{default:o(()=>[e("pre",null,i(p.value),1)]),_:1}),L,z,e("p",null,[I,N,P,V,A,s(a,{to:"#cropping"},{default:o(()=>[j]),_:1}),D]),q,e("p",null,[J,M,R,s(a,{to:"#cropping"},{default:o(()=>[W]),_:1}),G]),K,e("ul",null,[(d(),u(y,null,b([200,300,400,500],l=>e("li",{key:l},[e("code",null,"h-"+i(l),1),O,e("code",null,"h-{sm|md|lg|xl|xxl}-"+i(l),1),t(" for a max height of "+i(l)+"px ",1)])),64))]),Q,X,Y,Z,ee,te,oe,se,s(n(r),{lang:"html",class:"w-100"},{default:o(()=>[e("pre",null,i(g.value),1)]),_:1}),ie,ne,ae,e("p",null,[le,s(a,{to:"/uu-layout/sidebar"},{default:o(()=>[re]),_:1}),ce,s(a,{to:"/uu-layout/hero"},{default:o(()=>[he]),_:1}),de]),s(n(r),{lang:"html",class:"w-100"},{default:o(()=>[e("pre",null,i(_.value),1)]),_:1}),ue,pe]),_:1})])}}});export{be as default};
