name: Build project

on:
  release:
    types: [created]
  pull_request:
      branches: [main, staging, develop]

jobs:
  build:
    name: Build project
    environment: dev_environment
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 10
      matrix:
        target: ['full', 'lite']

    steps:
      - uses: actions/checkout@v3
      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Echo version
        run: |
          echo $RELEASE_VERSION
          echo ${{ matrix.target }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Build files (target ${{ matrix.target }})
        run: |
          chmod +x ./build_target.sh
          ./build_target.sh ${{ matrix.target }} $RELEASE_VERSION
      - name: Zip files
        if: github.event_name != 'pull_request'
        run: zip -r uu-bootstrap-${{ github.ref_name }}-${{ matrix.target }}.zip dist
      - uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.target }}
          path: dist/
      - name: Add to release
        if: github.event_name != 'pull_request'
        # Adapted from JasonEtco/upload-to-release 0.1.1, MIT license
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ZIP_FILE="uu-bootstrap-${{ github.ref_name }}-${{ matrix.target }}.zip"
            CONTENT_LENGTH_HEADER="Content-Length: $(stat -c%s $ZIP_FILE)"

            RELEASE_ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)
            UPLOAD_URL="https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=${ZIP_FILE}"

            curl \
              -f \
              -sSL \
              -XPOST \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "${CONTENT_LENGTH_HEADER}" \
              -H "Content-Type: application/zip" \
              --upload-file $ZIP_FILE \
              "${UPLOAD_URL}"
