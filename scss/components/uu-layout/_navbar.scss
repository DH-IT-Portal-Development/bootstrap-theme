@use "sass:map";
@use "../../configuration" as c;

.#{c.$uu-prefix}navbar {
    width: 100%;
    background: c.$black;
    flex-wrap: nowrap;
    justify-content: flex-start;

    @media (max-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
        background: c.$white !important;
        color: c.$black !important;
        border-bottom: 1px solid var(--#{c.$uu-css-prefix}border-color);
        flex-wrap: wrap;
        justify-content: space-between;
        position: sticky;
        top: 0;
    }

    .#{c.$uu-prefix}navbar-container {
        width: 100%;
        // We subtract the spacing of navlinks for better visual alignment with other spaced containers
        $-spaced-padding-x: calc(#{c.$uu-content-spacing-padding-x} - var(--#{c.$uu-css-prefix}navbar-navlink-padding-x));
        padding-left: $-spaced-padding-x;
        padding-right: $-spaced-padding-x;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: inherit;

        @media (max-width: c.$uu-content-start-spacing-breakpoint) {
            // We subtract the spacing of navlinks for better visual alignment with other spaced containers
            $-padding-x: calc(var(--#{c.$uu-css-prefix}container-padding-x) - var(--#{c.$uu-css-prefix}navbar-navlink-padding-x));
            padding-left: $-padding-x;
            padding-right: $-padding-x;
        }

        @media (max-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
            padding-left: 0;
            padding-right: 0;
        }
    }

    .navbar-brand {
        padding-left: 0.75rem;

        @media (min-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
            display: none;
        }

        img {
            height: 1.5rem;
        }

    }

    @media (min-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
        .navbar-toggler {
            display: none;
        }
        .navbar-collapse {
            display: flex !important;
            flex-basis: auto;
        }
    }

    .navbar-nav {

        @media (min-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
            flex-direction: row;
        }

        .dropdown-menu {
            border-top: none;

            &[data-bs-popper] {
                // Spacing fix, thanks popper
                margin-top: 0;
            }

            @media (min-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
                position: absolute;
            }

            .dropdown-item.active, .dropdown-item:active {
                color: inherit;
                background: inherit;
                font-weight: bold;
            }
        }

        .nav-link {
            color: c.$white;

            &:hover,
            &:focus {
                color: c.$yellow;
            }

            &.disabled {
                color: c.$gray-500;
            }

            @media (min-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
                padding: var(--#{c.$uu-css-prefix}navbar-navlink-padding-y) var(--#{c.$uu-css-prefix}navbar-navlink-padding-x);
            }

            @media (max-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
                background: c.$black;
                padding-left: var(--#{c.$uu-css-prefix}container-padding-x);
                padding-right: var(--#{c.$uu-css-prefix}container-padding-x);
                border-top: 1px solid var(--#{c.$uu-css-prefix}border-color-dark);
            }

            &.dropdown-toggle.show::after {
                transform: rotate(180deg);
            }
        }

        .show > .nav-link,
        .nav-link.active {
            color: c.$yellow;
        }
    }

    .navbar-toggler {
        color: c.$white;
        border-color: transparent;
    }

    .navbar-toggler-icon {
        background-image: c.escape-svg(c.$navbar-light-toggler-icon-bg);
    }

    .navbar-text {
        color: c.$white;

        a,
        a:hover,
        a:focus {
            color: c.$yellow;
        }

        @media (max-width: map.get(c.$grid-breakpoints, c.$uu-navbar-breakpoint)) {
            color: c.$black;
        }
    }
}
