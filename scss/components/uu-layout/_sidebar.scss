@use "sass:map";

.#{$uu-prefix}sidebar-container {
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: row;
    gap: var(--#{$uu-css-prefix}sidebar-gap);

    @media (max-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
        flex-direction: column;
        gap: 0;
    }

    .#{$uu-prefix}sidebar {
        order: 1;
        background: var(--#{$uu-css-prefix}sidebar-background);
        flex: 0 0 $uu-sidebar-full-width;
        padding:
            var(--#{$uu-css-prefix}sidebar-padding-y)
            var(--#{$uu-css-prefix}sidebar-padding-x)
            var(--#{$uu-css-prefix}sidebar-padding-y)
            $uu-content-spacing-padding-x;
        z-index: 100;

        @media (max-width: $uu-content-start-spacing-breakpoint) {
            padding-left: var(--#{$uu-css-prefix}sidebar-padding-x);
            // flex-basis = width + 2 * padding-x
            flex-basis: $uu-sidebar-intermediate-full-width;
        }

        @media (max-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
            flex-basis: auto;
            padding: var(--#{$uu-css-prefix}sidebar-mobile-padding-y) var(--#{$uu-css-prefix}container-padding-x);
        }

        img, code, p, span, pre {
            display: inline-block;
        }

        div, img, code, p, span, pre {
            max-width: var(--#{$uu-css-prefix}sidebar-width);
            @media (max-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
                max-width: 100%;
            }
        }

        .#{$uu-prefix}sidebar-toggle {
            font-size: $h5-font-size;
            margin: 0;
            border: none;
            text-align: left;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0;
            background: transparent;

            &:hover {
                background: none;
            }

            &::after {
                border-bottom: 0;
                border-left: .3em solid transparent;
                border-right: .3em solid transparent;
                border-top: .3em solid;
                content: "";
                display: inline-block;
                transition: transform .3s linear;
            }

            &[aria-expanded="true"]::after {
                transform: rotate(180deg);
            }

            @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
                display: none;
            }
        }

        .#{$uu-prefix}sidebar-collapse {

            @media (max-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
                padding-top: var(--#{$uu-css-prefix}container-padding-y);
            }

            @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
                display: block;
            }

            @for $i from 1 through 7 {
                h#{$i}, .h#{$i} {
                    border-bottom: 3px solid var(--#{$uu-css-prefix}border-color);
                    padding-bottom: var(--#{$uu-css-prefix}sidebar-header-padding-y);
                    margin-bottom: 0;
                    font-weight: var(--#{$uu-css-prefix}sidebar-header-font-weight);

                    @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
                        &.#{$uu-prefix}sidebar-header-linked {
                            margin-right: calc(-1 * var(--#{$uu-css-prefix}sidebar-padding-x));
                        }
                    }
                }
            }

            .nav {
                flex-direction: column;

                .nav {
                    padding-left: 1.5rem;
                }

                .nav-link {
                    color: var(--#{$prefix}body-color);
                    border-bottom: 1px solid var(--#{$uu-css-prefix}border-color);
                    padding: var(--#{$uu-css-prefix}sidebar-nav-padding-y) var(--#{$uu-css-prefix}sidebar-nav-padding-y);

                    &.is-active {
                        font-weight: bold;
                    }

                    &:hover,
                    &:focus {
                        text-decoration: underline;
                    }

                    &.disabled {
                        color: var(--#{$uu-css-prefix}sidebar-nav-disabled-color);
                        cursor: not-allowed;
                    }

                    &.active {
                        font-weight: var(--#{$uu-css-prefix}sidebar-nav-active-font-weight);
                    }
                }

            }
        }
    }

    .#{$uu-prefix}sidebar-content {
        order: 2;
        flex: 1 1 auto;
        // Allows the div to shrink below initial content width
        min-width: 0;
        padding:
            var(--#{$uu-css-prefix}sidebar-padding-y)
            var(--#{$uu-css-prefix}container-padding-x)
            var(--#{$uu-css-prefix}sidebar-padding-y);

        @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
            // When shrinking, this might be smaller than one thinks
            padding-right: max(
                #{$uu-content-spacing-padding-x},
                var(--#{$uu-css-prefix}container-padding-x)
            );
            padding-left: 0;
            padding-top: var(--#{$uu-css-prefix}sidebar-padding-y);
        }

        @for $i from 1 through 7 {
            h#{$i}.#{$uu-prefix}sidebar-header-linked, .h#{$i}.#{$uu-prefix}sidebar-header-linked {
                border-bottom: 1px solid var(--#{$uu-css-prefix}border-color);
                padding-bottom: calc(var(--#{$uu-css-prefix}sidebar-header-padding-y) + 1px);

                @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
                    padding-left: var(--#{$uu-css-prefix}sidebar-gap);
                    margin-left: calc(-1 * var(--#{$uu-css-prefix}sidebar-gap));
                }
            }
        }

    }

    // Modifiers

    // Sticky sidebar > $breakpoint
    @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
        &.#{$uu-prefix}sidebar-sticky {
            .#{$uu-prefix}sidebar > * {
                position: sticky;
                top: var(--#{$uu-css-prefix}sidebar-padding-y);
            }
        }
    }

    // Sticky sidebar < $breakpoint
    @media (max-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
        &.#{$uu-prefix}sidebar-mobile-sticky {
            .#{$uu-prefix}sidebar {
                position: sticky;
                top: 0;
            }
        }
        &.#{$uu-prefix}sidebar-mobile-sticky.#{$uu-prefix}sidebar-mobile-bottom {
            .#{$uu-prefix}sidebar {
                top: unset;
                bottom: 0;
            }
        }
    }

    @media (max-width: map.get($grid-breakpoints, $uu-navbar-breakpoint)) {
        &.#{$uu-prefix}sidebar-mobile-sticky {
            .#{$uu-prefix}sidebar {
                position: sticky;
                top: var(--#{$uu-css-prefix}navbar-mobile-height);
            }
        }
    }

    // Sidebar at bottom < $breakpoint
    @media (max-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
        &.#{$uu-prefix}sidebar-mobile-bottom {
            .#{$uu-prefix}sidebar {
                order: 2;
            }

            .#{$uu-prefix}sidebar-content {
                order: 1;
            }
        }
    }

    // Sidebar on right > $breakpoint
    @media (min-width: map.get($grid-breakpoints, $uu-sidebar-breakpoint)) {
        &.#{$uu-prefix}sidebar-right {
            .#{$uu-prefix}sidebar {
                order: 2;
                padding-left: var(--#{$uu-css-prefix}sidebar-padding-x);
                padding-right: $uu-content-spacing-padding-x;

                .#{$uu-prefix}sidebar-collapse {
                    @for $i from 1 through 7 {
                        h#{$i}, .h#{$i} {
                            &.#{$uu-prefix}sidebar-header-linked {
                                padding-left: var(--#{$uu-css-prefix}sidebar-padding-x);
                                margin-right: 0;
                                margin-left: calc(-1 * var(--#{$uu-css-prefix}sidebar-padding-x));
                            }
                        }
                    }
                }
            }

            .#{$uu-prefix}sidebar-content {
                order: 1;
                padding-right: 0;
                padding-left: $uu-content-spacing-padding-x;

                @for $i from 1 through 7 {
                    h#{$i}.#{$uu-prefix}sidebar-header-linked, .h#{$i}.#{$uu-prefix}sidebar-header-linked {
                        padding-left: 0;
                        padding-right: var(--#{$uu-css-prefix}sidebar-gap);
                        margin-left: 0;
                        margin-right: calc(-1 * var(--#{$uu-css-prefix}sidebar-gap));
                    }
                }

                @media (max-width: $uu-content-start-spacing-breakpoint) {
                    padding-left: var(--#{$uu-css-prefix}sidebar-padding-x);
                }
            }
        }
    }
}
